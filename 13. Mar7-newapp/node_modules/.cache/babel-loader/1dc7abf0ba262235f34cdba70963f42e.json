{"ast":null,"code":"import _slicedToArray from \"/Users/ishitagops/ish/ishitag-fullstackjava-tasks/13. Mar7-newapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/ishitagops/ish/ishitag-fullstackjava-tasks/13. Mar7-newapp/src/Toggle.js\";\nimport React, { useState } from 'react';\nvar Toggle = function Toggle() {\n  //Using Inline Function and the The Logical Not (!) to toggle state\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    toggle = _useState2[0],\n    setToggle = _useState2[1];\n  function popUp() {\n    setToggle(!toggle);\n    alert(\"Activation\");\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: popUp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"Toggle Button\"), toggle ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 20\n    }\n  }, \"Toggle button activated!\")) : null);\n};\nexport default Toggle;","map":{"version":3,"names":["React","useState","Toggle","_useState","_useState2","_slicedToArray","toggle","setToggle","popUp","alert","createElement","Fragment","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["/Users/ishitagops/ish/ishitag-fullstackjava-tasks/13. Mar7-newapp/src/Toggle.js"],"sourcesContent":["import React, { useState } from 'react'\n\nconst Toggle = () => {\n\n  //Using Inline Function and the The Logical Not (!) to toggle state\n  const [toggle, setToggle] = useState(true)\n\n  function popUp() {\n    setToggle(!toggle);\n    alert(\"Activation\");\n\n  }\n\n  return (\n    <>\n    <br></br>\n      <button \n            onClick={popUp}>Toggle Button\n            \n            {/* onClick=() => {setToggle(!toggle)} */}\n      </button>\n      \n      {/* Method 1: */}\n      \n      {/* {toggle && \n      (\n        <p><b>Toggle button activated!</b></p>\n      )} */}\n\n      {/* Method 2: */}\n\n      {\n        toggle? <p><b>Toggle button activated!</b></p>: null\n      } \n\n    </>\n  )\n}\nexport default Toggle"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAS;EAEnB;EAAA,IAAAC,SAAA,GAC4BF,QAAQ,CAAC,IAAI,CAAC;IAAAG,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnCG,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EAExB,SAASI,KAAKA,CAAA,EAAG;IACfD,SAAS,CAAC,CAACD,MAAM,CAAC;IAClBG,KAAK,CAAC,YAAY,CAAC;EAErB;EAEA,oBACET,KAAA,CAAAU,aAAA,CAAAV,KAAA,CAAAW,QAAA,qBACAX,KAAA,CAAAU,aAAA;IAAAE,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAS,eACPlB,KAAA,CAAAU,aAAA;IACMS,OAAO,EAAEX,KAAM;IAAAI,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,eAEhB,CACG,EAYPZ,MAAM,gBAAEN,KAAA,CAAAU,aAAA;IAAAE,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAAGlB,KAAA,CAAAU,aAAA;IAAAE,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,0BAAwB,CAAI,CAAI,GAAE,IAAI,CAGrD;AAEP,CAAC;AACD,eAAehB,MAAM"},"metadata":{},"sourceType":"module"}